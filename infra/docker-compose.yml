version: '3.8'

services:
  # Backend API and WebSocket server
  backend:
    build:
      context: ../apps/backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MOCK_MODE=true
      - VECTOR_BACKEND=hnswlib
    volumes:
      - ../offers.md:/app/offers.md:ro
      - ../prompts:/app/prompts:ro
    depends_on:
      - vector-db
    networks:
      - ai-sales-network

  # Frontend Next.js application
  frontend:
    build:
      context: ../apps/frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_WS_URL=ws://localhost:3000/ws
    depends_on:
      - backend
    networks:
      - ai-sales-network

  # HNSWLib vector database microservice (fallback)
  vector-db:
    build:
      context: ../infra/vector-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    volumes:
      - vector-data:/app/data
    networks:
      - ai-sales-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ai-sales-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ai-sales-network

volumes:
  vector-data:
  redis-data:

networks:
  ai-sales-network:
    driver: bridge
